

=============================================
---- Monitoring Tablespace Space Usage  ----
=============================================


CREATE TABLESPACE tbsalert
DATAFILE 'tbsalert.dbf'
SIZE 50M  LOGGING EXTENT MANAGEMENT LOCAL
SEGMENT SPACE MANAGEMENT AUTO;

select * from dba_data_files
where TABLESPACE_NAME='TBSALERT'; 


select * from dba_free_space
where TABLESPACE_NAME='TBSALERT';


SELECT df.tablespace_name tablespace, fs.bytes free, df.bytes, 
fs.bytes*100/ df.bytes PCT_FREE
FROM dba_data_files df ,dba_free_space fs
WHERE df.tablespace_name = fs.tablespace_name
AND df.tablespace_name = 'TBSALERT';

begin
DBMS_SERVER_ALERT.SET_THRESHOLD( 
metrics_id => dbms_server_alert.tablespace_pct_full,    
warning_operator =>DBMS_SERVER_ALERT.OPERATOR_GE, 
warning_value => '55', 
critical_operator =>DBMS_SERVER_ALERT.OPERATOR_GE, 
critical_value => '70', 
observation_period => 1,
consecutive_occurrences => 1, 
instance_name => 'orcl', 
object_type =>DBMS_SERVER_ALERT.OBJECT_TYPE_TABLESPACE, 
object_name => 'TBSALERT');
end;

SELECT warning_value, critical_value
FROM dba_thresholds 
WHERE object_name='TBSALERT';

SELECT * FROM dba_outstanding_alerts
 WHERE object_name='TBSALERT';

create table test100 ( emp_id number, name varchar2(100) )
 tablespace TBSALERT;
 
 begin
 for i in 1..1000000
 loop
 insert into test100 values ( i, 'any dummy name' );
 end loop;
 commit;
 end;
 
SELECT df.tablespace_name tablespace, fs.bytes free, df.bytes, 
fs.bytes*100/ df.bytes PCT_FREE
FROM dba_data_files df ,dba_free_space fs
WHERE df.tablespace_name = fs.tablespace_name
AND df.tablespace_name = 'TBSALERT';

------------Wait a few minutes. 10-15--------------
SELECT reason, message_type , message_level
FROM dba_outstanding_alerts
WHERE object_name='TBSALERT';




=======================================================
-------- MANAGING RESUMABLE SPACE ALLOCATION  ---------
=======================================================

/*
Managing Resumable Space Allocation
A resumable statement:
1- Enables you to suspend large operations instead of receiving an error
2- Gives you a chance to fix the problem while the operation is suspended, rather
than starting over
3-Is suspended for the following conditions:
------>>Out of space
------>>Maximum extents reached
------>>Space quota exceeded
4-Can be suspended and resumed multiple times
*/



CREATE TABLESPACE tbsalert
DATAFILE '/u01/app/oracle/oradata/ORCL/pdbts/tbsalert.dbf'
SIZE 10M  LOGGING EXTENT MANAGEMENT LOCAL
SEGMENT SPACE MANAGEMENT AUTO;

create table test100 ( emp_id number, name varchar2(100) )
 tablespace TBSALERT;
 
 begin
 for i in 1..400000
 loop
 insert into test100 values ( i, 'any dummy name' );
  commit;
 end loop;
end;
 
 select * from test100
 
 /*
 A statement executes in resumable mode only if its session has been enabled by
one of the following actions:
1- The RESUMABLE_TIMEOUT initialization parameter is set to a nonzero value.
2- An ALTER SESSION ENABLE RESUMABLE statement is issued
*/

ALTER SESSION ENABLE RESUMABLE     
 
 truncate table test100;
 
 begin
 for i in 1..400000
 loop
 insert into test100 values ( i, 'any dummy name' );
  commit;
 end loop;
end;
 
 --the script will be suspend 7,200 seconds=2 hours. ( this the default )
 --you can do ALTER SESSION ENABLE RESUMABLE TIMEOUT 3600
 --now oracle will not give us any message that this script has been suspend
 --but we can see it as DBA. open new session and do this
 /*
 select * from dba_resumable;

SELECT file_name, autoextensible FROM dba_data_files WHERE
tablespace_name='TBSALERT';

ALTER DATABASE DATAFILE
'/u01/app/oracle/oradata/ORCL/pdbts/tbsalert.dbf'
AUTOEXTEND ON MAXSIZE unlimited;

SELECT file_name, autoextensible FROM dba_data_files WHERE
tablespace_name='TBSALERT';

--WAIT until NO ROWS retrived by THIS QUERY
select * from dba_resumable;

select count(1) from test100;
*/



========================================================
--------- SEGMENT ADVISOR AND SHRINK -------------------
========================================================

delete from test100;
commit;

SELECT df.tablespace_name tablespace, fs.bytes free, df.bytes, 
fs.bytes*100/ df.bytes PCT_FREE
FROM dba_data_files df ,dba_free_space fs
WHERE df.tablespace_name = fs.tablespace_name
AND df.tablespace_name = 'TBSALERT';


--Create a Segment Advisor Task
 DECLARE
 tname VARCHAR2(128) := 'my_seg_task3';
 tname_desc VARCHAR2(128) := 'Get shrink advice for segments in TBSALERT';
 task_id NUMBER;
 object_id NUMBER;
 objectname VARCHAR2(100);
 objecttype VARCHAR2(100);
 BEGIN
 dbms_advisor.create_task('Segment Advisor', task_id,tname,tname_desc,NULL);---select * from DBA_ADVISOR_DEFINITIONS
 dbms_advisor.create_object(tname,'TABLESPACE','TBSALERT',' ',' ',NULL, ' ',object_id) ;
 dbms_advisor.set_task_parameter(tname,'RECOMMEND_ALL','TRUE');
 END;

--Execute the task.
DECLARE
tname VARCHAR2(128) := 'my_seg_task3';
BEGIN
dbms_advisor.EXECUTE_TASK(tname);
END;

SELECT DESCRIPTION FROM dba_advisor_tasks WHERE TASK_NAME='my_seg_task3';


SELECT attr1, attr2, message
FROM dba_advisor_findings f, dba_advisor_objects o
 WHERE f.task_name = o.task_name 
 AND f.object_id = o.object_id 
 AND f.task_name = 'my_seg_task3';


alter table test100 enable row movement;

ALTER TABLE test100 SHRINK SPACE;

SELECT df.tablespace_name tablespace, fs.bytes free, df.bytes, 
fs.bytes*100/ df.bytes PCT_FREE
FROM dba_data_files df ,dba_free_space fs
WHERE df.tablespace_name = fs.tablespace_name
AND df.tablespace_name = 'TBSALERT';







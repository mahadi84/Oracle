01. What is Procedure and Sequence in Oracle Programming? Procedure vs User Define Function(UDF)?
02. What/Why is PL/SQL?
03. What/Why is Trigger? Where/How it works?


01.What is Procedure and Sequence in Oracle Programming? Procedure vs User Define Function(UDF)?
---------------------------------------------------------------------------------------------
Ans: 
    PROCEDURE: Is a group of PL/SQL statements that you can call by name.
    SEQUENCE: An object in Oracle that is used to generate a (unique)number sequence, specially to act as a primary key.

Procedure vs User Define Function(UDF):
---------------------------------------
 > We cannot use Procudure in SQL statements like SELECT, INSERT, UPDATE, DELETE, MERGE, and JOIN CLAUSE. but we can use them with UDF.
 > We can use transactions in SP but it is not possible in UDF.
 > Procedure compiled Execution whereas UDF is Pre-compiled Execution.
 > SP can have both table variables and temporary tables but UDF can have only table variables as it does not permit the use of temporary tables.


02.What/Why is PL/SQL?
----------------------
Ans: 
    --PL/SQL stands for Procedural Language extensions of SQL. Introduces block structure.
    --Oracle created PL/SQL that extends some limitations of SQL 


03. What/Why is Trigger? Where/How it works?
--------------------------------------------
We can also say that they are specialized stored programs which execute implicitly(পরোক্ষভাবে) when a triggering event occurs.
This means we cannot call and execute them directly instead they only get triggered by events in the database.

These events can be anything such as:
-------------------------------------
01. A DML Statement – An Update, Insert or Delete statement executing on any table of your database. 
                      You can program your trigger to execute either BEFORE or AFTER executing your DML statement.
02. A DDL Statement – Such as CREATE or ALTER. 
                      These triggers can also be executed either BEFORE or AFTER the execution of your DDL statement. 
                      These triggers are generally used by DBAs for auditing purpose (keep an eye on the various changes on your schema).
03. A system event. – I mean shut down or startup of your database.
04. A User Events   – Such as log off or log on onto your database. You can create a trigger which will either execute before or after the event. 
                      Furthermore, it will record the information such as time of event occur, the username who created it.






BASIC STRUCTURE:
----------------
[DECLARE]
   Declaration statements;
BEGIN
   Execution statements;
  [EXCEPTION]
      Exception handling statements;
END;
------

VARIBLE DECLARATION:
--------------------
DECLARE
  v_user_name user_info.user_name%TYPE;
  hire_date := to_date('19700101','YYYYMMDD');   /to assign a value or a variable to another use :=
  ERR_MESS varchar2(200);
BEGIN
  SELECT user_name INTO v_user_name
  FROM user_info
  WHERE user_id = :CONTROL.USERNAME;  // To receive data from FORM for query
  /* To show data to FORM's field*/
  :ERR_MESS:=v_user_name;
END;




PL/SQL IF THEN statement:
-------------------------
IF condition_1 THEN
  statements_1
     
     ELSIF condition_2 THEN
     statements_2
     ELSIF condition_3 THEN
     statements_3
ELSE
    else_statements
END IF;







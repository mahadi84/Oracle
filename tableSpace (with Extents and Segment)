
FILEs LOCATION:
$ORACLE_HOME/oradata/DB_NAME/        ---- DEFAULT 
$ORACLE_HOME/product/19/db_1/dbs/    ---- USER CREATED TABLESPACE



TO CHECK ANY USERS's/TABLE's TABLESPACE
-------------------------------
select * / TABLE_NAME, TABLESPACE_NAME, NUM_ROWS, BLOCKS, MAX_EXTENTS, SEGMENT_CREATED FROM dba_tables where owner='HRMS2';
select * / TABLE_NAME, TABLESPACE_NAME, NUM_ROWS, BLOCKS, MAX_EXTENTS, SEGMENT_CREATED WHERE owner='HRMS2' AND table_name='EMP';

TO CHECK SPECIFIC TABLESPACE's INFORMATION
-------------------------------------------
SELECT DBMS_METADATA.GET_DDL('TABLESPACE','TBS_NAME') FROM dual;
OR
SELECT * / tablespace_name, bytes / 1024 / 1024 MB 
FROM dba_free_space 
WHERE tablespace_name = 'TBS4';   


TO CHECK TOTAL TABLESPACE in a PDB
----------------------------------
SELECT * / TABLESPACE_NAME,BLOCK_SIZE FROM dba_tablespaces;
SELECT * from v$tablespace;
SELECT * / tablespace_name, file_name, user_bytes / 1024/ 1024 USER_BYTES_MB FROM dba_data_files;
SELECT * from v$datafile;
SELECT * from dba_temp_files
SELECT * from v$tempfile


===============================================================================
-----------   CREATE/ASSIGN/RENAME/RESIZE/DELETE/MOVE TABLESPACE   ------------
===============================================================================

CREATE (TEMPORARY/UNDO) TABLESPACE  tbs_3
    DATAFILE 'tbs_3_data.dbf'
    SIZE 5m;

CREATE TABLESPACE tbst_4
    DATAFILE 'tbs_4_data.dbf'
    SIZE 5m
    AUTOEXTEND ON;
    

CREATE TABLESPACE WITHOUT MENTIONING DATAFILE LOCATION
------------------------------------------------------
show parameter DB_CREATE_FILE_DEST
alter system set DB_CREATE_FILE_DEST='/u01/app/oracle/oradata/ORCL/pdbts';
show parameter DB_CREATE_FILE_DEST
    

ASSIGN TABLESPACE to USER/TABLE
-------------------------------
CREATE USER khaled identified by khaled default tablespace tbs_3 
     OR
CREATE TABLE t3(c1 INT PRIMARY KEY) TABLESPACE tbs_3;
CREATE TABLE t4(c1 INT PRIMARY KEY,c2 INT NOT NULL,FOREIGN KEY(c2) REFERENCES t3(c1)) TABLESPACE tbs_4;



RENAME/MOVE (THE TABLESPACE DATAFILE) FILE (t4_01.dbf TO t4_001.dbf)
-------------------------------------------------------------
ALTER DATABASE MOVE DATAFILE
'/u01/app/oracle/oradata/ORCL/pdbts/t4_01.dbf'
TO
'/u01/app/oracle/oradata/ORCL/pdbts/t4_001.dbf'



RESIZE/DROP  TABLESPACE DATAFILE
---------------------------
ALTER DATABASE 
    DATAFILE 'tbs_parmanent_4_data.dbf' 
    RESIZE 25m;
    
DROP TABLESPACE tbs_parmanent_3  // if only try with this line will show error.
INCLUDING CONTENTS AND DATAFILES
CASCADE CONSTRAINTS;



CREATING TABLESPACE GROUP
-------------------------
CREATE TEMPORARY TABLESPACE tablespace_name 
    TEMPFILE 'path_to_file'
    SIZE 50M
    TABLESPACE GROUP group_name;

/*
please read this

Queries and DML and DDL operations can be performed while the data file is being moved, for example:
1-SELECT statements against tables and partitions
2-Creation of tables and indexes
3- Rebuilding of indexes
Other notes:
1- If objects are compressed while the data file is moved, the compression remains the same.
2- You do not have to shut down the database or take the data file offline while you move a data file to another
location, disk, or storage system.
3- You can omit the TO clause only when an Oracle-managed file is used. In this case, the
DB_CREATE_FILE_DEST initialization parameter should be set to indicate the new location.
4-If the REUSE option is specified, the existing file is overwritten.
note:  The REUSE keyword indicates the new file should be created even if it already exists.
5-If the KEEP clause is specified, the old file will be kept after the move operation. The KEEP clause is not allowed
if the source file is an Oracle-managed file.

*/


    

=========================================================================
==  ---------------   ALL ABOUT SEGMENTS and EXTENTS   --------------- ==
=========================================================================

SELECT * FROM DBA_SEGMENTS
WHERE OWNER='HRMS2'
AND SEGMENT_NAME='EMP';  -- ORACLE DOES NOT CREATE SEGMENT, UNTIL ROW INSERTED INTO THE TABLE

SELECT * FROM DBA_EXTENTS
WHERE OWNER='HRMS2'
AND SEGMENT_NAME='EMP';

begin
 for i in 1..1000000
 loop
 insert into ALEX.EMP values (i,'just test name', 'just test comments');
 end loop;
 commit;
end;
    
  
  
  
  

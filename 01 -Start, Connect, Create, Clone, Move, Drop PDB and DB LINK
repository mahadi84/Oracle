
----------------------
TO START A DATABASE
---------------------
$ sqlplus
Username: sys as sysdba
Password: ********
SQL>startup;

-------------------
CONNECT DATABASE:
-------------------
$sqlplus / as sysdba
SQL> connect pdb1admin/welcome@pdb1
SQL>connect system/system@test.com:1521/orcl.com;


SHUTDOWN
SQL>shutdown  abort | immediate | transactional


==========================================
01. CREATE PLUGGABLE DATABASE
==========================================
alter session set container=cdb$root;

--go to vbox
mkdir /u01/app/oracle/oradata/ORCL/pdb1

CREATE PLUGGABLE DATABASE pdb1
  ADMIN USER pdb1admin IDENTIFIED BY welcome
  ROLES = (dba)
  DEFAULT TABLESPACE users
  DATAFILE '/u01/app/oracle/oradata/ORCL/pdb1/users01.dbf' SIZE 250M AUTOEXTEND ON
  FILE_NAME_CONVERT = ('/u01/app/oracle/oradata/ORCL/pdbseed/','/u01/app/oracle/oradata/ORCL/pdb1/');

DROP PLUGGABLE DATABASE testpdb KEEP DATAFILES;
DROP PLUGGABLE DATABASE testpdb INCLUDING DATAFILES;

/*
 file_name_convert
Use this clause to determine how the database generates the names of files 
(such as data files and wallet files) for the PDB.
*/

=======================================================
02. CLONE PLUGGABLE DATABASE
=======================================================

LETS CLONE orclpdb TO pdb5 (orclpdb needs to be opened)

--login as oracle user and create folder
--mkdir /u01/app/oracle/oradata/ORCL/pdb5

--Alter into to orclpdb and do some uncommited tansactions.
--update hr.employees set salary=salary +1 where employee_id=100;
--select salary from hr.employees where employee_id=100; 

alter session set container=cdb$root;

CREATE PLUGGABLE DATABASE pdb5 from orclpdb
FILE_NAME_CONVERT = ('/u01/app/oracle/oradata/ORCL/orclpdb/','/u01/app/oracle/oradata/ORCL/pdb5/');

/*
you can do this if you need oracle managed files to names the files
CREATE PLUGGABLE DATABASE pdb5 from orclpdb
create_file_dest '/u01/app/oracle/oradata/ORCL/pdb5'
*/


===========================================================
03. MOVE PLUGGABLE DATABASE
===========================================================
--step 00 (Create a folder)
mkdir /u01/app/oracle/oradata/ORCL/pdbtest/

--step 01 (Close the PDB that want to move)
alter pluggable database pdb01 close immediate;

--step 2 (Convert PDB to xml file)
alter pluggable database pdb01  unplug into '/u01/app/oracle/oradata/pdbtest.xml'

--step3
drop pluggable database pdb01 keep datafiles; --you should keep it.

--step 4 -- but this not work in 18c
/*
DECLARE
  l_result BOOLEAN;
BEGIN
  l_result := DBMS_PDB.check_plug_compatibility(
                pdb_descr_file => '/u01/app/oracle/oradata/pdbtest.xml',
                pdb_name => 'pdbtest');

  IF l_result THEN
    DBMS_OUTPUT.PUT_LINE('compatible');
  ELSE
    DBMS_OUTPUT.PUT_LINE('incompatible');
  END IF;
END;
*/

--step 5
create pluggable database pdbtest using '/u01/app/oracle/oradata/pdbtest.xml'
NOCOPY TEMPFILE REUSE; (if you want to use old datafile)
--FILE_NAME_CONVERT=('/u01/app/oracle/oradata/ORCL/pdb01/','/u01/app/oracle/oradata/ORCL/pdbtest/');


=============================
---CREATE DATABASE LINK -----
=============================

Requirement: 
both user id must have DBA privilege
Ex: GRANT DBA to username;

Syntex:
CREATE DATABASE LINK <name-anything-you-want>
CONNECT TO <user-id-to-connect-with> IDENTIFIED BY <password>
USING '<tns-entry-of-other-db>';


CREATE DATABASE LINK read_pdb2
CONNECT TO pdb2admin IDENTIFIED BY welcome
USING 'pdb2';

SELECT * from employees@read_pdb2;

DROP DATABASE LINK read_pdb2;

**Don't forget to commit





